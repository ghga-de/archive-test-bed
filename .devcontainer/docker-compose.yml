version: '3'

services:

  app:
    container_name: archive-test-bed
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        # [Choice] Python version: 3, 3.8, 3.7, 3.6
        VARIANT: 3.9
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    depends_on:
      kafka:
        condition: service_healthy

    init: true
    privileged: true

    volumes:
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    user: vscode

    environment:
      # GHGA connector
      GHGA_CONNECTOR_DOWNLOAD_API: http://dcs_rest:8080
      GHGA_CONNECTOR_UPLOAD_API: http://ucs_rest:8080
      GHGA_CONNECTOR_PART_SIZE: 8589934592
      # Kafka
      TB_SERVICE_NAME: testbed_kafka
      TB_SERVICE_INSTANCE_ID: testbed-app-1
      TB_KAFKA_SERVERS: '["kafka:9092"]'
      # MongoDb
      TB_DB_CONNECTION_STR: mongodb://testbed_user:testbed_key@mongodb
      # S3
      TB_S3_ENDPOINT_URL: http://localstack:4566
      TB_S3_ACCESS_KEY_ID: testbed-key
      TB_S3_SECRET_ACCESS_KEY: testbed-secret
      # file services
      TB_FILE_METADATA_EVENT_TOPIC: metadata
      TB_FILE_METADATA_EVENT_TYPE: file_metadata_upserts
      # bucket names
      TB_INBOX_BUCKET: inbox
      TB_OUTBOX_BUCKET: outbox
      TB_STAGING_BUCKET: staging
      TB_PERMANENT_BUCKET: permanent

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: testbed_user
      MONGO_INITDB_ROOT_PASSWORD: testbed_key
    ports:
      - 44441:27017

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    depends_on:
      - mongodb
    ports:
      - 8088:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://testbed_user:testbed_key@mongodb

  crs:
    image: ghga/auth-service:0.5.0
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_started
    env_file: crs.env
    environment:
      AUTH_SERVICE_HOST: 0.0.0.0
      AUTH_SERVICE_INCLUDE_APIS: '["claims"]'
      AUTH_SERVICE_ADD_AS_DATA_STEWARDS: '["id-of-data-steward"]'
      AUTH_SERVICE_DB_URL: mongodb://testbed_user:testbed_key@mongodb
      AUTH_SERVICE_DB_NAME: auth

  wps:
    image: ghga/work-package-service:0.1.3
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    env_file: wps.env
    environment:
      WPS_HOST: 0.0.0.0
      WPS_SERVICE_INSTANCE_ID: wps-rest-1
      WPS_KAFKA_SERVERS: '["kafka:9092"]'
      WPS_DB_CONNECTION_STR: mongodb://testbed_user:testbed_key@mongodb
      WPS_DATASET_OVERVIEW_EVENT_TOPIC: metadata
      WPS_DATASET_OVERVIEW_EVENT_TYPE: metadata_dataset_overview
      WPS_DOWNLOAD_ACCESS_URL: http://crs:8080/download-access
      WPS_DB_NAME: wps
    command: run-rest

  wps-consume:
    image: ghga/work-package-service:0.1.3
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    env_file: wps.env
    environment:
      WPS_HOST: 0.0.0.0
      WPS_SERVICE_INSTANCE_ID: wps-consume-1
      WPS_KAFKA_SERVERS: '["kafka:9092"]'
      WPS_DB_CONNECTION_STR: mongodb://testbed_user:testbed_key@mongodb
      WPS_DATASET_OVERVIEW_EVENT_TOPIC: metadata
      WPS_DATASET_OVERVIEW_EVENT_TYPE: metadata_dataset_overview
      WPS_DOWNLOAD_ACCESS_URL: http://crs:8080/download-access
      WPS_DB_NAME: wps
    command: consume-events

  ars:
    image: ghga/access-request-service:0.1.1
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    env_file: ars.env
    environment:
      ARS_HOST: 0.0.0.0
      ARS_SERVICE_INSTANCE_ID: ars-rest-1
      ARS_KAFKA_SERVERS: '["kafka:9092"]'
      ARS_NOTIFICATION_EVENT_TOPIC: notifications
      ARS_NOTIFICATION_EVENT_TYPE: notification
      ARS_DATA_STEWARD_EMAIL: "helpdesk@ghga.de"
      ARS_DB_CONNECTION_STR: mongodb://testbed_user:testbed_key@mongodb
      ARS_DOWNLOAD_ACCESS_URL: http://crs:8080/download-access
      ARS_DB_NAME: ars

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 100s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    ports:
      - 9092:9092

  localstack:
    image: localstack/localstack:2.0.2
    environment:
      SERVICES: s3
      AWS_DEFAULT_REGION: eu-west-1
      LOCALSTACK_HOST: localhost
      AWS_ACCESS_KEY_ID: testbed-key
      AWS_SECRET_ACCESS_KEY: testbed-secret
      PERSISTENCE: 1
      DEBUG: 1
    volumes:
      - type: volume
        source: s3_fs
        target: /var/lib/localstack
        volume:
          nocopy: true
      - ./init-scripts/localstack:/etc/localstack/init/ready.d

  vault:
    image: hashicorp/vault:1.12
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
    cap_add:
      - IPC_LOCK

  vault_init:
    image: hashicorp/vault:1.12
    depends_on:
      - vault
    environment:
      VAULT_ADDR: "http://vault:8200"
    volumes:
      - ./init-scripts/vault:/docker-entrypoint.d
    entrypoint: ./docker-entrypoint.d/setup.sh

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  s3_fs: {}
